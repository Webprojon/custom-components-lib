@use '../../styles/variables' as *;
@use '../../styles/mixins' as mixins;

.root {
  display: inline-flex;
  align-items: center;
  gap: $space-2;
  color: $color-text;
  position: relative;
}

.input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.box {
  width: 18px;
  height: 18px;
  border: 2px solid $color-outline;
  border-radius: $radius-sm;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  @include mixins.transition-base;
}

.box.small {
  width: 16px;
  height: 16px;
}

.box.small .checkmark {
  width: 10px;
  height: 10px;
}

.box.medium {
  width: 18px;
  height: 18px;
}

.box.medium .checkmark {
  width: 13px;
  height: 13px;
}

.box.large {
  width: 20px;
  height: 20px;
}

.box.large .checkmark {
  width: 14px;
  height: 14px;
}

.checkmark {
  width: 12px;
  height: 12px;
  pointer-events: none;
  opacity: 0;
  transform: scale(0.6);
  transition:
    opacity 0.12s ease,
    transform 0.12s ease;
}

.checked {
  border-color: $color-focus;
  background: $color-focus;
}

.checked .checkmark {
  opacity: 1;
  transform: scale(1);
  color: white;
}

.indeterminateMark {
  width: 12px;
  height: 2px;
  background: white;
  border-radius: 1px;
}

.colorSecondary.checked {
  background: $color-secondary;
  border-color: $color-secondary;
}

.colorSuccess.checked {
  background: $color-success;
  border-color: $color-success;
}

.colorError.checked {
  background: $color-error;
  border-color: $color-error;
}

.colorInfo.checked {
  background: $color-info;
  border-color: $color-info;
}

.colorWarning.checked {
  background: $color-warning;
  border-color: $color-warning;
  color: $color-warning-text;
}

.label {
  font-size: $font-size-md;
  user-select: none;
}

.smallLabel {
  font-size: $font-size-sm;
}

.largeLabel {
  font-size: $font-size-lg;
}

.disabled {
  opacity: 1;
  color: $color-disabled-text;
  cursor: not-allowed;
}

.disabled .box {
  background: $color-disabled-bg;
  border-color: $color-disabled-bg;
}

.container {
  display: inline-flex;
  align-items: center;
  gap: $space-2;
}

.container.start {
  flex-direction: row-reverse;
}

.container:not(.disabled):hover {
  cursor: pointer;
}

/* Hover halo previously inline */
.hoverHalo {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 38px;
  height: 38px;
  transform: translate(-50%, -50%) scale(0.85);
  border-radius: 9999px;
  background: $color-focus-hover-bg;
  opacity: 0;
  transition:
    opacity 150ms ease,
    transform 180ms ease;
  pointer-events: none;
  z-index: 0;
}

.container:not(.disabled):hover .hoverHalo {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

/* Size overrides */
.root.small .hoverHalo {
  width: 34px;
  height: 34px;
}
.root.large .hoverHalo {
  width: 42px;
  height: 42px;
}
